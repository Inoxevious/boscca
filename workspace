cd ~/Documents/projects/cent_cent/coopApp/backend
source coop_env/bin/activate && conda deactivate
cd django_app

python manage.py runserver

python manage.py startapp 

python manage.py createsuperuser
python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic --noinput

ssh -i "finpara.pem" ubuntu@ec2-18-218-46-101.us-east-2.compute.amazonaws.com

/home/greats/Documents/projects


ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDZ3EUSTucqPvuDIp9gcUVGM/iOXaWPkIB7ZKbhUa6nQtyVrqzFH6kzFeUzDJ5U/3UDn7wpAV8ilft4Cx6N3sg8vVACESRHPgxkYtfaNC5MKF23/BbBeIM+w1MDQib2VAyVBsfqnosS0Qp04QRxCRzBBKynB9RX4ABHg71tSKFhOdE7WXZeZRYAF6Jd2PKHibC1fJCDs4q6cGeLXxKieMK1oujvwwDmEgR/UJYTGVBjuSUd72e4yzLrf1Tmq1TKg7bmdv/cFqKYf3A4VVjuscFHEizF9VUytb/AiZiKpwMNSIlViix3+9QGCRTkcrK2pSzvAte8MZxUecvph2Et/cIKLn/Ym0c+KzNd3EIOyGZg6KBnzri80nGcrvqKTYlWoouiglQC/Tti1cWjilsjxz+e+sVJH1S1xYFiBYROMhPgP0PvndHVrQSsaFlaVEXr54x1YzO0X7/PYsEK7eSiUbzaEfSZaH/2oCZM7/5/BDB+hWdMI/Hv9B+ftydNZLMCvWs= ubuntu@ip-172-31-32-142
rsync -avz -progress -e 

# run locally in project main directory
rsync -avz -progress -e "ssh -i ../finpara.pem"  --exclude frontend/node_modules --exclude frontend/react_app/node_modules . ubuntu@ec2-18-218-46-101.us-east-2.compute.amazonaws.com:/home/ubuntu/app/

cd app
sudo docker-compose build
####################GIT########################
git config --global user.email "mpasiinnocent@gmail.com"
git config --global user.name "Inoxevious"
git config --global core.preloadIndex false

git add .
git commit -m "update"
git push

git add .
git commit -m "update"
git pull
:
wq

chmod +x init-letsencrypt.sh
sudo ./init-letsencrypt.sh
sudo docker-compose down
sudo docker-compose build
sudo docker-compose up --detach

# run in VPS! in app dir

# stop containers
sudo docker-compose down

# build containers
sudo docker-compose build

# run containers
sudo docker-compose up --detach



                var frm = $('#AddCity');
                frm.submit(getAjax);
                function getAjax() {
                    var formData = JSON.stringify($("#AddCity").serializeArray());
                    console.log("Request parameters:")
                    console.log(JSON.parse(formData))
                    $.ajax({
                        headers: { "X-CSRFToken": '{{csrf_token}}' },
                        type: "POST",
                        url: "{% url 'users:add_city' %}",
                        contentType: 'application/json',
                        dataType: 'json',
                        data: formData,
                        success: function (data) {
                            jsonData = console.log(data);
                            var dataObj = JSON.parse(data);
                            console.log("Response data:")
                            console.log(dataObj)
                            $.each(data, function (a, b) {
                                alert("We got what we came for!" + b.probability);
                                /// do stuff
                                row = "<option>" + b.probability + "</option>" 
                        
            
                                $("#cities").append(row);
                            });
                            //more stuff here, too much for this example
                        },
                    }); return false;
                }

?: (security.W004) You have not set a value for the SECURE_HSTS_SECONDS setting. If your entire site is served only over SSL, you may want to consider setting a value and enabling HTTP Strict Transport Security. Be sure to read the documentation first; enabling HSTS carelessly can cause serious, irreversible problems.
?: (security.W008) Your SECURE_SSL_REDIRECT setting is not set to True. Unless your site should be available over both SSL and non-SSL connections, you may want to either set this setting True or configure a load balancer or reverse-proxy server to redirect all connections to HTTPS.
?: (security.W009) Your SECRET_KEY has less than 50 characters or less than 5 unique characters. Please generate a long and random SECRET_KEY, otherwise many of Django's security-critical features will be vulnerable to attack.
?: (security.W012) SESSION_COOKIE_SECURE is not set to True. Using a secure-only session cookie makes it more difficult for network traffic sniffers to hijack user sessions.
?: (security.W016) You have 'django.middleware.csrf.CsrfViewMiddleware' in your MIDDLEWARE, but you have not set CSRF_COOKIE_SECURE to True. Using a secure-only CSRF cookie makes it more difficult for network traffic sniffers to steal the CSRF token.
?: (security.W018) You should not have DEBUG set to True in deployment.
?: (security.W022) You have not set the SECURE_REFERRER_POLICY setting. Without this, your site will not send a Referrer-Policy header. You should consider enabling this header to protect user privacy.
